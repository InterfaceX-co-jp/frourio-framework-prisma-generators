generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "file:./dev.db"
}

generator model {
  provider           = "node ./lib/generators/model/generator.js"
  output             = "./__generated__/model"
  additionalTypePath = "./@additionalType/index.ts"
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?

  posts Post[]
  books Book[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  likes     BigInt
  bytes     Bytes

  Polymorphic Polymorphic[]
}

model Book {
  id       Int    @unique
  title    String
  author   User?  @relation(fields: [authorId], references: [id])
  authorId Int?

  Polymorphic Polymorphic[]
}

model Map {
  key   String @id
  value String
}

enum PolymorphicRelationType {
  A
  B
}

model Polymorphic {
  id Int @id @default(autoincrement())

  value String
  type  PolymorphicRelationType

  polymorphicId Int

  PolymorphicBook Book? @relation(fields: [polymorphicId], references: [id], map: "book_polymorphicId")
  PolymorphicPost Post? @relation(fields: [polymorphicId], references: [id], map: "post_polymorphicId")
}

enum ArrayFieldExampleEnum {
  A
  B
}

model ArrayField {
  id Int @id @default(autoincrement())

  intArray      Int[]
  floatArray    Float[]
  stringArray   String[]
  booleanArray  Boolean[]
  dateTimeArray DateTime[]
  bytesArray    Bytes[]
  enumArray     ArrayFieldExampleEnum[]
}

model JsonField {
  id Int @id @default(autoincrement())

  rawJson    Json
  jsonObject Json /// @json(type: [JsonObject])
  jsonArray  Json /// @json(type: [JsonArray])
}
